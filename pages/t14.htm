<!DOCTYPE html>
<html lang="en">

<head>

  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="description" content="">
  <meta name="author" content="do.sibsutis.ru">

  <title>Тема 14. Конспект лекций</title>
	
	<link rel="icon" type="image/png" href="../lib/css/favicon.png">
  <!-- Bootstrap Core CSS -->
  <link href="../lib/css/bootstrap.css" rel="stylesheet">
	
  <!-- Custom CSS -->
  <link href="../lib/css/scrolling-nav.css" rel="stylesheet">

  <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
  <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
  <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
    <script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
  <![endif]-->
</head>

<!-- The #page-top ID is part of the scrolling feature - the data-spy and data-target are part of the built-in Bootstrap scrollspy function -->

<body id="page-top" data-spy="scroll" data-target=".navbar-fixed-top">
  <!-- Navigation -->
<nav class="navbar navbar-default navbar-fixed-top">
 <div class="container">
  <!-- Brand and toggle get grouped for better mobile display -->
  <div class="navbar-header">
   <li class="hidden"> <a class="page-scroll" href="#page-top"></a> </li>
	 
	 <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
    <span class="icon-bar"></span>
    <span class="icon-bar"></span>
    <span class="icon-bar"></span>
   </button>
	 
   <a class="navbar-brand " href="../index.htm"> 
  <text class = "hidden-xs">Архитектура телекоммуникационных систем и сетей</text> 
  <text class = "visible-xs">Архитектура телекоммуникационных систем и сетей</text>
	 </a>
  </div>

  <!-- Collect the nav links, forms, and glyphicon glyphicon-list-alt content for toggling -->
  <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
   
	 <!-- <ul class="nav navbar-nav">
		<li><a href="#"></a></li> 
   </ul> -->
	
   <ul class="nav navbar-nav navbar-right">
    <li class="dropdown">
		<button type="button" class="navbar-toggle dropdown-toggle hidden-xs" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
			<span class="icon-bar"></span>
			<span class="icon-bar"></span>
			<span class="icon-bar"></span>
		</button>	   
		<a class = "dropdown-toggle visible-xs" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Материалы</a>
     <ul class="dropdown-menu">
    <li><a href="../index.htm">Аннотация курса</a></li>
      <li role="separator" class="divider"></li>
      <li><a href="lec_index.htm">Теория</a></li>
      <li><a href="c_work.htm">Курсовая работа</a></li>
      <li><a href="labs.htm">Лабораторные работы</a></li>
     
      <li role="separator" class="divider"></li>
    
      <li><a href="lit.htm">Литература</a></li>
      <!--li><a href="q.htm">Вопросы для самопроверки</a></li-->			
     </ul>
 </li>
 </ul>
  </div><!-- /.navbar-collapse -->
 </div><!-- /.container-fluid -->
</nav>


  <div id="intro" class="section content-section ">
    <div class="container">
       <div class="row">
        <div class="col-lg-12">	


<!-- содержание -->	
<div class="page-header">				
<h3><a href="#">Тема 14. Архитектура взаимодействия 
    открытых систем</a></h3>


</div>
<!--начало-->
  <p> Появление компьютерных
          сетей привело к необходимости создания стандартов, определяющих принципы
          взаимодействия внешних пользователей с сетями и сетей между собой (т.е.
          стандартов взаимодействия открытых систем, ВОС). </P>
        <p> По своей сути сеть это
          соединение оборудования от разных производителей. Для решения проблем
          совместимости все производители должны придерживаться общепринятых правил
          построения оборудования. Эти правила закрепляются в стандартах. </P>
        <p> Идеологической основой
          стандартизации в компьютерных сетях является многоуровневый подход. </P>
        <p> Взаимодействие между сетевыми
          устройствами является сложной, технической задачей. Для решения сложных
          задач часто используют декомпозицию, т.е. разбиение сложной задачи на
          несколько простых задач-модулей. </P>
        <p> Декомпозиция предполагает: </P>
        <UL>
          <LI> четкое определение функций каждого модуля,
            решающего отдельную задачу; </LI>
          <LI> определение правил взаимодействия между
            модулями. </LI>
        </UL>
        <p> Многоуровневый подход при
          декомпозиции предполагает следующее: </P>
        <UL>
          <LI> все множество модулей разбивается на
            уровни (при этом функции всех уровней четко определены); </LI>
          <LI> уровни образуют иерархию (т.е. существуют
            верхние и нижние); </LI>
          <LI> для решения своих задач каждый уровень
            обращается с запросами только к модулям непосредственно примыкающего
            нижнего уровня; </LI>
          <LI> результаты работы модулей уровня могут
            быть переданы только соседнему, вышележащему. </LI>
        </UL>
        <p> В процессе работы сети
          взаимодействуют узлы, каждый из которых представляет собой иерархическую
          систему. Процедура взаимодействия этих узлов может быть описана в виде
          набора правил взаимодействия каждой пары соответствующих (равноправных)
          уровней участвующих сторон. </P>
        <p> Формализованные правила,
          определяющие последовательность и формат сообщений, которыми обмениваются
          сетевые компоненты, лежащие на одном уровне, но в разных узлах, называется
          ПРОТОКОЛОМ. </P>
        <p> Уровни, находящиеся в одном
          узле в процессе работы, также взаимодействуют друг с другом в соответствии
          с четко определенными правилами. Эти правила принято называть ИНТЕРФЕЙСОМ. </P>
        <p> Т.о. средства каждого уровня
          должны отрабатывать, во-первых, свой собственный протокол, а во-вторых,
          интерфейсы с соседними уровнями. </P>
        <p> Следует отметить, что протокол
          каждого уровня может быть изменен независимо от протокола другого уровня.
          Эта независимость и делает многоуровневый подход привлекательным. </P>
         <p><img src="images/Image370.gif" width="183" height="170"></P>
        <p> <U><B>Эталонная модель
          ВОС</b></u> является наиболее общим описанием структуры построения стандартов.
          Она определяет принципы взаимосвязи между отдельными стандартами и является
          основой обеспечения возможности <B><I>параллельной </i></B>разработки
          различных стандартов для ВОС. </P>
        <p> Изначально определяется
          структура построения стандартов ВОС. </P>
        <p> Затем описание услуг, которые
          должны предоставляться отдельными компонентами (уровнями) открытой системы. </P>
        <p> Последний уровень детализации
          стандартов ВОС – разработка в рамках определенной услуги ВОС набора
          протоколов.  </P>
        <p> <i>При этом под протоколом
          понимается документ, определяющий процедуры и правила взаимодействия
          одноименных уровней работающих друг с другом систем.</i> </P>
        <p> Таким образом, стандарт
          ВОС должен определять: </P>
        <UL>
            <LI> Эталонную модель ВОС; </LI>
            <LI> Конкретный набор услуг, удовлетворяющих
              эталонной модели; </LI>
            <LI> Набор протоколов, обеспечивающих удовлетворение
              услуг, для реализации которых они разработаны. </LI>
        </UL>
        <p> Исходя из вышесказанного,
          <B><I>система является открытой,</i></B> если она соответствует эталонной
          модели ВОС, стандартному набору услуг и стандартным протоколам. </P>
        <p> <b><u>СЕМИУРОВНЕВАЯ МОДЕЛЬ 
          ВОС.</u></b> </P>
        <p> <b><u>Сетевые модели OSI
          и IEEE Project 802</u></b> </P>
        <p> В 1978 г. Международная 
          организация по стандартизации ISO (International Standards Organization) 
          выпустила набор спецификаций описывающих архитектуру сетей с неоднородными 
          устройствами. (Прообраз модели ВОС). </P>
        <p> В 1984 г. ISO, выпустила
          новую версию своей модели, названную эталонной моделью ВОС. (Open System
          Interconnection reference model, OSI.)  </P>
         <p><img src="images/Image371.gif" width="515" height="287"></P>
         <p> Структура эталонной модели
          ВОС </P>
        <p> В данной модели все процессы,
          реализуемые открытой системой, разбиты на семь взаимно подчиненных уровней.
          Уровень с меньшим номером представляет услуги смежному с ним верхнему
          уровню и пользуется для этого услугами смежного с ним нижнего уровня.
          Самый верхний (7) уровень только потребляет услуги, а самый нижний (1)
          только их предоставляет. </P>
        <p> <b><u>Семь уровней модели</u></b> </P>
        <p> <U><B>Физический уровень
          </b></u>осуществляет передачу неструктурированного “сырого” потока битов
          по физической среде (без учета деления на кодовые комбинации). Реализуется
          электрический, оптический, механический и функциональный интерфейсы
          с кабелем. Формирует сигналы, которые переносят данные от верхних уровней.
          Устанавливает длительность каждого бита и способ перевода каждого бита
          в соответствующие электрические и оптические сигналы. </P>
        <p> Содержание самих битов
          на данном уровне значения не имеет. </P>
        <p> К этому уровню имеют отношение: </P>
        <UL>
          <LI> характеристики физических сред передачи
            данных (полоса пропускания, волновое сопротивление, помехозащищенность…); </LI>
          <LI> характеристики электрических (оптических)
            сигналов (уровни, тип кодирования, скорость модуляции…); </LI>
          <LI> тип разъема и назначение каждого контакта
            (BNC, RJ-45, RS-232c…). </LI>
        </UL>
        <p> Пример спецификация <B>10BaseT</B>. </P>
        <p> <b><u>Канальный уровень
          </u></b> </P>
        <p> К основным задачам решаемым
          на канальном уровне относятся: </P>
        <OL>
              <LI> организация доступа к среде передачи; </LI>
            <LI> реализация механизмов обнаружения
              и коррекции ошибок. </LI>
        </OL>
        <p> Если на физическом уровне
          рассматривается просто поток битов, то на канальном биты группируются
          в кодовые комбинации (фреймы). Фреймы защищаются помехоустойчивым кодированием
          обеспечивающим обнаружение или исправление ошибок.  </P>
        <p> В протоколах канального
          уровня заложена определенная структура связей между компьютерами и способы
          их адресации (только для строго определенной топологии сети). </P>
        <p> Уровень управления каналом
          (второй уровень) или канальный представляет собой комплекс процедур
          и методов управления каналом передачи данных (установление соединения,
          его поддержание и разъединение), организованный на основе физического
          соединения, он обеспечивает обнаружение и исправление ошибок. </P>
        <p> Осуществляет передачу кадров
          данных от Сетевого к Физическому уровню. На приеме упаковывает “сырой”
          поток битов, поступающих от физического уровня, в кадры данных.  </P>
        <p> В целом КУ представляет
          собой законченный набор функций по пересылке сообщений между узлами
          сети. В некоторых случаях могут допускать непосредственную работу с
          прикладным уровнем. </P>
        <p> Пример: Ethernet, Token
          ring. </P>
        <p> <U><B>Сетевой уровень (Network) 
          </b></u>отвечает за адресацию сообщений и перевод логических имен и 
          адресов в физические адреса. Исходя из конкретных сетевых условий, здесь 
          определяется маршрут от ПК отправителя к ПК получателя.  </P>
        <p> Основной задачей третьего
          (сетевого) уровня является маршрутизация сообщений, кроме этого он обеспечивает
          управление информационными потоками, организацию и поддержание транспортных
          каналов, а так же учитывает предоставленные услуги. </P>
        <p> Если сетевой адаптер маршрутизатора
          не может передавать большие блоки данных, посланные ПК отправителя,
          на Сетевом уровне эти блоки разбиваются на меньшие. На Сетевом уровне
          получателя происходит обратный процесс переупаковки в исходное состояние. </P>
        <p> Рассмотренные три нижних 
          уровня определяют функционирование узла сети. Протоколы этих уровней 
          обслуживают так называемую транспортную сеть. Как любая транспортная 
          система, эта сеть транспортирует информацию, не интересуясь ее содержанием. 
          Главной задачей этой сети является быстрая и надежная доставка информации. </P>
        <p> Пример: IP (стек TCP/IP),
          IPX (стек IPX/SPX). </P>
        <p> <U><B>Транспортный уровень 
          (Transport)</b></u> Этот уровень принимает от вышестоящего уровня некоторый 
          блок данных и должен обеспечить его транспортировку через сеть связи 
          к удаленной системе. Уровни, лежащие выше транспортного, не учитывают 
          специфику сети, через которую передаются данные, они “знают” лишь удаленные 
          системы, с которыми взаимодействуют. Транспортный же уровень должен 
          “знать”, как работает сеть, какие размеры блоков данных она принимает, 
          и т.п. </P>
        <p> Транспортный уровень гарантирует
          доставку пакетов без ошибок, в той же последовательности, без потерь
          и дублирования.  </P>
        <p> На этом уровне сообщения
          также могут переупаковываться: длинные разбиваются на несколько пакетов,
          а короткие объединяются в один. Это увеличивает эффективность передачи
          пакетов по сети. На транспортном уровне ПК получателя сообщения распаковываются,
          восстанавливаются в первоначальном виде, и обычно посылается сигнал
          подтверждения. </P>
        <p> Если качество канала хорошее,
          то используется облегченный сервис. Датаграмный режим (UDP). </P>
        <p> Если качество канала плохое,
          то используется максимум средств – установление предварительного логического
          соединения, организация обратной связи, циклическая нумерация пакетов,
          квитирование, проверка контрольных сумм и т.д. (Режим виртуальных каналов
          TCP). </P>
        <p> <b><u>Сеансовый уровень 
          (Session)</u></b> </P>
        <p> Следующий пятый уровень
          протоколов называют уровнем сессий или сеансовым. Его основным назначением
          является организация способов взаимодействия между прикладными процессами: </P>
        <UL>
          <LI> соединение прикладных процессов для
            их взаимодействия,  </LI>
          <LI> организация передачи информации между
            процессами во время взаимодействия  </LI>
          <LI> “рассоединения” процессов. </LI>
        </UL>
        <p> На этом уровне выполняются
          такие функции, как распознавание имен и защита, необходимые для связи
          двух приложений в сети. </P>
        <p> Сеансовый уровень обеспечивает
          синхронизацию между пользовательскими задачами посредством расстановки
          в потоке данных контрольных точек (chekpoints). Таким образом, в случае
          сетевой ошибки, потребуется заново передать только данные, следующие
          за последней контрольной точкой. </P>
        <p> <U><B>Представительский 
          уровень</b></u> (Presentation) определяет синтаксис передаваемой информации, 
          т.е. набор знаков и способы их представления, которые являются понятными 
          для всех взаимодействующих открытых систем.  </P>
        <p> Сам процесс согласования
          определяется протоколом уровня представления, по которому взаимодействующие
          системы договариваются о той форме, в которой будет передаваться информация. </P>
        <p> Представительский уровень 
          отвечает за преобразование протоколов, трансляцию данных, их шифрование, 
          смену и преобразование применяемого набора символов (кодовой таблицы) 
          и расширение графических команд. Может управлять сжатием данных.  </P>
        <p> На этом уровне работает
          редиректор, переадресовывающий операции ввода вывода к ресурсам сервера. </P>
        <p> <U><B>Прикладной уровень</b></u> 
          (Application) эталонной модели ВОС определяет семантику, т.е. смысловое 
          содержание информации, которой обмениваются ОС в процессе решения некоторой 
          заранее известной задачи. Взаимодействующие системы должны одинаково 
          интерпретировать получаемые данные. </P>
        <p> Прикладной (пользовательский)
          уровень является основным, именно ради него существуют все остальные
          уровни. Он называется прикладным, поскольку с ним взаимодействуют прикладные
          процессы системы, которые должны решать некоторую задачу совместно с
          прикладными процессами, размещенными в других открытых системах.  </P>
        <p> Этот уровень обеспечивает
          услуги, напрямую поддерживающие приложения пользователя, такие как,
          программное обеспечение для передачи файлов, доступа к базам данных,
          электронной почты. (FTP, TFTP…) </P>
        <p> <b><u>Модель IEEE Project 
          802. Расширение модели OSI.</u></b> </P>
        <p> В феврале 1980 г. был выпущен 
          IEEE Project 802. Хотя публикация данного проекта опередила стандарты 
          ISO данные работы велись параллельно, при полном обмене информации поэтому 
          полностью совместимы. </P>
        <p> IEEE Project 802 – установил
          стандарты для физических компонентов сети – интерфейсных плат и кабельной
          системы с которыми имеют дело Физический и Канальный кровни модели OSI
          . </P>
        <p> Данные стандарты распределяются: </P>
        <UL>
            <LI> на платы сетевых адаптеров; </LI>
            <LI> компоненты глобальных вычислительных
              сетей; </LI>
            <LI> компоненты сетей на коаксиале и витой
              паре. </LI>
        </UL>
        <p> 802-спецификации определяют
          способы, в соответствии с которыми сетевые карты осуществляют доступ
          к физической среде и передают по ней данные. </P>
        <p> В модели IEEE Канальный
          уровень делится на два подуровня: </P>
        <UL>
            <LI> управление логической связью (контроль
              ошибок и управление потоком данных); </LI>
            <LI> Управление доступом к среде. (контроль
              несущей, передача маркера,…). </LI>
        </UL>
         <p><img src="images/Image372.gif" width="400" height="87"></P>
        <p> Эталонная модель ВОС является
          удобным <B><I>средством для распараллеливания</i></B> разработки стандартов
          для взаимосвязи открытых систем. Она определяет лишь <B><I>концепцию
          построения и взаимосвязи стандартов между собой</i></B> и может служить
          базой для стандартизации в различных сферах передачи, хранения и обработки
          информации.  </P>
        <p> Контрольные вопросы по 
          теме: </P>
        <OL>
          <LI> Что такое модель взаимодействия открытых
            систем и каково её назначение. </LI>
          <LI> В чем смысл многоуровневого подхода
            и декомпозиции при решении сложных технических задач. </LI>
          <LI> Что такое протокол и интерфейс. </LI>
          <LI> Перечислите название всех уровней модели
            OSI и сформулируйте основные задачи, решаемые на каждом уровне. </LI>
          <LI> Что регламентируют спецификации расширения
            модели IEEE Project 802. </LI>
        </OL>
       
<br><br>
<!--конец-->
      
				

				</div>
			</div>
			
      </div>
    </div>
  </div>
	
	<!--Меню навигации по Темам -->	
	<div aria-label="..." class = "nav-menu">
	 <ul class="pager background-transition-slow">
		 <li title="Наверх" style = "margin-right:15px;	"><a class = "glyphicon glyphicon-menu-up page-scroll" href="#page-top"></a></li>
		 <li title="К предыдущей лекции"><a class = "glyphicon glyphicon-menu-left page-scroll" href="t13.htm"></a></li>
		 <li title="В содержание"><a class = "glyphicon glyphicon-list-alt" href="lec_index.htm"></a></li>
		 <li title="К следующей лекции"><a class = "glyphicon glyphicon-menu-right page-scroll" href="t15.htm"></a></li>
	 </ul>
	</div>
	<!---->
	
	</div>
  <!-- jQuery -->
  <script src="../lib/js/jquery.js"></script>

  <!-- Bootstrap Core JavaScript -->
  <script src="../lib/js/bootstrap.min.js"></script>

  <!-- Scrolling Nav JavaScript -->
  <script src="../lib/js/jquery.easing.min.js"></script>
  <script src="../lib/js/scrolling-nav.js"></script>

</body>

</html>
